buildscript {
    ext {
        springBootVersion = '3.1.5'
        jasyptVersion = '3.0.5'
        languagetool = '6.3'
        tika = '2.9.1'
    }
    repositories {
        mavenCentral()
         maven {
        url "https://repo.itextsupport.com/releases"
           content {
           includeGroupByRegex "com\\.itextpdf.*"
        }
    }
 maven {
        url "https://repo.itextsupport.com/snapshot"
           content {
           includeGroupByRegex "com\\.itextpdf.*"
        }
    }
    
    }

    dependencies { 
    	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id "com.gorylenko.gradle-git-properties" version '2.4.1'
    id 'de.undercouch.download' version '5.5.0'
    id 'eclipse'
    id 'jacoco'
    id 'org.sonarqube' version '4.4.1.3373'
}

sonarqube {
    properties {
        property "sonar.gradle.skipCompile", "true"
        property "sonar.projectKey", "turing-app"
        property "sonar.organization", "viglet-turing"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.cpd.exclusions", "**/persistence/dto/**,**/persistence/model/**,**/plugins/nlp/otca/response/xml/**"
    }

}

jar {
    archiveBaseName = 'viglet-turing'
    archiveVersion = '0.3.7'
}
 
eclipse {
    classpath {
        file {
            whenMerged {
                def src = entries.find { it.path == 'src/main/resources' }
                src.excludes = ['**']
            }
        }
    }
}

gitProperties {
    extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}

bootJar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    launchScript() // executable jar
    manifest {
        attributes(
                'Implementation-Version': "${-> (String.valueOf(jar.archiveVersion.get()).concat(' - ').concat(String.valueOf(project.ext.gitProps['git.commit.id.abbrev'])))}"
        )
    }
    archiveBaseName = 'viglet-turing'
}

bootRun {
   jvmArgs = ["--add-modules", "java.se", 
  "--add-exports", "java.base/jdk.internal.ref=ALL-UNNAMED",
  "--add-opens", "java.base/java.lang=ALL-UNNAMED",
  "--add-opens", "java.base/java.nio=ALL-UNNAMED",
  "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
  "--add-opens", "java.management/sun.management=ALL-UNNAMED",
  "--add-opens", "jdk.management/com.sun.management.internal=ALL-UNNAMED"]
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.itextsupport.com/releases"
        content {
           includeGroupByRegex "com\\.itextpdf.*"
        }
    }
     maven {
        url "https://repo.itextsupport.com/snapshot"
           content {
           includeGroupByRegex "com\\.itextpdf.*"
        }
    }
}

group = 'com.viglet.turing'
sourceCompatibility = 17
targetCompatibility = 17

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean

if (!project.hasProperty('no-ui')) {
    compileJava.dependsOn(':turing-ui:build');
}

configurations {
    all*.exclude group: 'xml-apis'
}

dependencies {
    // Spring Boot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-artemis', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: "${springBootVersion}"


 	implementation project(':turing-commons')
 	implementation project(':turing-filesystem:fs-commons')
 	
	implementation 'org.apache.activemq:artemis-jms-server:2.31.0'

	implementation group: 'com.itextpdf', name: 'itext7-core', version: '8.0.1'
	implementation group: 'com.itextpdf', name: 'cleanup', version: '4.0.1'
	implementation group: 'org.apache.commons', name: 'commons-imaging', version: '1.0-alpha3'

    // Liquidbase
    //implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.6.2'

    // SolrJ
    implementation(group: 'org.apache.solr', name: 'solr-solrj', version: '9.4.0') {
        exclude(module: 'xml-apis')
    }

    // Oracle
    implementation group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'

    // Jasypt
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: "${jasyptVersion}"

    // Spring
    implementation group: 'org.springframework', name: 'spring-test', version: '6.0.13'

    // Jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5-jakarta', version: '2.15.3'

    // H2
    implementation group: 'com.h2database', name: 'h2', version: '2.2.224'

    // MariaDB
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.2.0'

    // PostgreSQL
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'

    // JSON
    implementation group: 'org.json', name: 'json', version: '20231013'

    // CoreNLP
    implementation group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '4.5.5'

    // OpenNLP
    implementation group: 'org.apache.opennlp', name: 'opennlp-tools', version: '2.3.0'

    // Apache Commons
    implementation group: 'commons-io', name: 'commons-io', version: '2.14.0'
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'

    // Hazelcast
	implementation group: 'com.hazelcast', name: 'hazelcast-all', version: '4.2.8'

    // Tika
    implementation group: 'org.apache.tika', name: 'tika-core', version: "${tika}"
    implementation group: 'org.apache.tika', name: 'tika-parsers', version: "${tika}"
    implementation group: 'org.apache.tika', name: 'tika-parser-pdf-module', version: "${tika}"
    implementation group: 'org.apache.tika', name: 'tika-parser-text-module', version: "${tika}"
    implementation group: 'org.apache.tika', name: 'tika-parser-ocr-module', version: "${tika}"
    implementation group: 'org.apache.tika', name: 'tika-parser-microsoft-module', version: "${tika}"
    implementation group: 'com.levigo.jbig2', name: 'levigo-jbig2-imageio', version: '2.0'
    implementation group: 'com.github.jai-imageio', name: 'jai-imageio-core', version: '1.4.0'
    implementation group: 'com.github.jai-imageio', name: 'jai-imageio-jpeg2000', version: '1.4.0'

    // SpringDoc
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'


    // Schema.org
    implementation group: 'com.squins.google.fork.schema-org-client', name: 'schema-org-client', version: '1.0.1'

    //PDFBox
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '3.0.0'

    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'

    //Language Tool
    implementation group: 'org.languagetool', name: 'language-es', version: "${languagetool}"
    implementation group: 'org.languagetool', name: 'language-en', version: "${languagetool}"
    implementation group: 'org.languagetool', name: 'language-pt', version: "${languagetool}"

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }

    jacocoTestReport {
        reports {
            xml.required = true
            html.required = false
        }
    }

    check.dependsOn jacocoTestReport

}
