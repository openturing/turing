buildscript {
	repositories {
	mavenCentral()
	jcenter()
	}
	dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

plugins {
  id "org.sonarqube" version "3.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'


sonarqube {
  properties {
    property "sonar.projectKey", "turing-wem"
    property "sonar.organization", "viglet-turing"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

sourceCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

task compileOne (type: JavaCompile) {
    source = fileTree(dir: 'src', include: '**/*.java')
    classpath = files('build/classes/main')
    destinationDir = file('build/classes/main')
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

task cleanDistribution(type: Delete) {
    delete "$buildDir/extracted_dist/"
}

task copyJar(type: Copy) {
    from "$buildDir/libs/turing-wem-all.jar"
    into "$buildDir/extracted_dist/"
}
task copyConfs(type: Copy) {
    from "conf"
    into "$buildDir/extracted_dist/conf/"
}

task copyCommandLine(type: Copy) {
    from "command-line"
    into "$buildDir/extracted_dist/command-line/"
}

task copySQL(type: Copy) {
    from "sql"
    into "$buildDir/extracted_dist/sql/"
}

task copyImports(type: Copy) {
    from "imports"
    into "$buildDir/extracted_dist/imports/"
}

task packageDistribution(type: Zip) {
    archiveFileName = "turing-wem.zip"
    destinationDirectory = file("$buildDir/dist")
    from "$buildDir/extracted_dist"
}

cleanDistribution.dependsOn shadowJar
copyConfs.dependsOn cleanDistribution
copyCommandLine.dependsOn copyConfs
copySQL.dependsOn copyCommandLine
copyImports.dependsOn copySQL
copyJar.dependsOn copyImports
packageDistribution.dependsOn copyJar

dependencies {
    
    if (System.env.CI) {
        implementation group: 'com.github.alegauss' , name: 'dummy-vgn', version: '2f2b7a1aea'
    }
    else {
        implementation files(fileTree(dir: 'lib', includes: ['*.jar']))
    }

    implementation group: 'com.beust', name: 'jcommander', version: '1.81'	
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
	implementation project(':turing-java-sdk')
	
    // Jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    
    // HTTP Client
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'

}

jar {
    manifest {
        attributes 'Main-Class': 'com.viglet.turing.wem.TurWEMCommander'
    }
 }
 
 shadowJar {
   baseName = 'turing-wem'
   classifier = null
   version = 'all'
   exclude 'vgn-*.jar'
   exclude 'castor-*.jar'
   exclude 'thirdparty-combined.jar'
     dependencies {
         exclude(dependency('log4j:log4j'))
         exclude(dependency('org.apache.httpcomponents:httpcore'))
         exclude(dependency('org.apache.httpcomponents:httpclient'))
         exclude(dependency('org.apache.httpcomponents:httpmime'))
         exclude(dependency('commons-httpclient:commons-httpclient'))
         exclude(dependency('com.github.alegauss:dummy-vgn'))
         exclude(dependency('commons-codec:commons-codec'))
         exclude(dependency('commons-logging:commons-logging'))
         exclude(dependency('org.json:json'))
   }
}

compileOne.options.compilerArgs = ["-sourcepath", "$projectDir/src/main/java"]
