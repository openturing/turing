
buildscript {
    ext { springBootVersion = '2.5.0'
	      hibernateVersion = '5.11.0.Final'
		  httpClientVersion = '4.5.11'
		  swaggerVersion = '3.0.0'
		  jasyptVersion = '2.1.1'
		 }
		repositories {
			mavenCentral()		
		}
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    			   classpath files("lib/gradle-js-plugin-2.14.2-SNAPSHOT.jar") }
}

plugins {
  id 'org.springframework.boot' version "${springBootVersion}"
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id "com.eriwen.gradle.js" version "2.14.1"
  id "com.gorylenko.gradle-git-properties" version "2.3.1"
  id 'de.undercouch.download' version '4.1.1'
  id 'eclipse'
  id 'jacoco'
  id "org.sonarqube" version "3.2.0"
}

sonarqube {
  properties {
    property "sonar.projectKey", "openturing_turing"
    property "sonar.organization", "alegauss-github"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

jar {
    archiveBaseName = 'viglet-turing'
    archiveVersion =  '0.3.3'
}

eclipse {
    classpath {
        file {
            whenMerged {
                def src = entries.find { it.path == 'src/main/resources' }
                src.excludes = ['**']
            }
        }
    }
}

gitProperties {
    extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}

bootJar {
	launchScript() // executable jar
    manifest {
    	attributes(    
        'Implementation-Version': "${-> project.jar.version + '-' + project.ext.gitProps['git.commit.id.abbrev']}"
    	)
  	} 
}

repositories {
	mavenCentral()
}

group = 'com.viglet.turing'
sourceCompatibility = 14
targetCompatibility = 14

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Combine JS Converse files
task combineConverseSystemJs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/converse/build/extract/system"
    dest = "${projectDir}/src/main/resources/public/js/converse/build/aggregate/turConverseSystem.js"
}

task combineConverseFeatureJs(dependsOn: ':combineConverseSystemJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/converse/build/extract/feature"
    dest = "${projectDir}/src/main/resources/public/js/converse/build/aggregate/turConverseFeature.js"
}

task combineConverseAllJs(dependsOn: ':combineConverseFeatureJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = ["${projectDir}/src/main/resources/public/js/converse/build/extract/main/__turConverseFactory.js", "${projectDir}/src/main/resources/public/js/converse/build/aggregate/turConverseSystem.js", "${projectDir}/src/main/resources/public/js/converse/build/aggregate/turConverseFeature.js"]
    dest = "${projectDir}/src/main/resources/public/js/converse/build/aggregate/turing-converse.js"
}

task minifyConverseAllJs(dependsOn: ':combineConverseAllJs', type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
 	source = "${projectDir}/src/main/resources/public/js/converse/build/aggregate/turing-converse.js"
    dest = file("${projectDir}/src/main/resources/public/js/converse/dist/turing-converse-min.js")
    closure {
        warningLevel = 'QUIET'
    }
}

// Combine JS SN files
task combineSNSystemJs(dependsOn: ':minifyConverseAllJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/sn/build/extract/system"
    dest = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNSystem.js"
}

task combineSNFeatureJs(dependsOn: ':combineSNSystemJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/sn/build/extract/feature"
    dest = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNFeature.js"
}

task combineSNAllJs(dependsOn: ':combineSNFeatureJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = ["${projectDir}/src/main/resources/public/js/sn/build/extract/main/__turSNFactory.js", "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNSystem.js", "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNFeature.js"]
    dest = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turing-sn.js"
}

task minifySNAllJs(dependsOn: ':combineSNAllJs', type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
 	source = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turing-sn.js"
    dest = file("${projectDir}/src/main/resources/public/js/sn/dist/turing-sn-min.js")
    closure {
        warningLevel = 'QUIET'
    }
}

// Combine JS files
task combineSystemJs(dependsOn: ':minifySNAllJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/build/extract/system"
    dest = "${projectDir}/src/main/resources/public/js/build/aggregate/turSystem.js"
}

task combineFeatureJs(dependsOn: ':combineSystemJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/build/extract/feature"
    dest = "${projectDir}/src/main/resources/public/js/build/aggregate/turFeature.js"
}

task combineAllJs(dependsOn: ':combineFeatureJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = ["${projectDir}/src/main/resources/public/js/build/extract/main/__turFactory.js", "${projectDir}/src/main/resources/public/js/build/aggregate/turSystem.js", "${projectDir}/src/main/resources/public/js/build/aggregate/turFeature.js"]
    dest = "${projectDir}/src/main/resources/public/js/build/aggregate/turing.js"
}

task minifyAllJs(dependsOn: ':combineAllJs', type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
 	source = "${projectDir}/src/main/resources/public/js/build/aggregate/turing.js"
    dest = file("${projectDir}/src/main/resources/public/js/dist/turing-min.js")
 	closure {
		compilerOptions.languageIn="ECMASCRIPT6"
		compilerOptions.languageOut="ECMASCRIPT5"
        warningLevel = 'QUIET'
    }
}

task stage(dependsOn: ['build', 'clean'])

compileJava.dependsOn(minifyAllJs)

build.mustRunAfter clean

dependencies {
	compileOnly group: 'javax.servlet', name: 'servlet-api', version: '2.5'
	
	implementation (group: 'org.apache.hadoop', name: 'hadoop-common', version: '3.3.0') {
		exclude(module: 'guava')
		exclude(module: 'commons-logging')
		exclude(module: 'log4j')
		exclude(module: 'slf4j-api')
		exclude(module: 'slf4j-log4j12')
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')				
		exclude(module: 'jasper-runtime')
		exclude(module: 'jasper-compiler')
		exclude(module: 'servlet-api')
		exclude(module: 'jsp-api')
		exclude(module: 'commons-el')
		

	}
	
	implementation (group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '3.3.0') {
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')				
		exclude(module: 'jasper-runtime')
		exclude(module: 'jasper-compiler')
		exclude(module: 'servlet-api')
		exclude(module: 'jsp-api')
		exclude(module: 'log4j')
	}
	implementation (group: 'org.apache.hadoop', name: 'hadoop-auth', version: '3.3.0') {
		exclude(module: 'commons-logging')
		exclude(module: 'log4j')
		exclude(module: 'slf4j-api')
		exclude(module: 'slf4j-log4j12')
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')				
		exclude(module: 'jasper-runtime')
		exclude(module: 'jasper-compiler')
		exclude(module: 'servlet-api')
		exclude(module: 'jsp-api')
	}
	implementation (group: 'org.apache.hadoop', name: 'hadoop-core', version: '1.2.1') {
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'hsqldb')
		exclude(module: 'commons-el')
	}
		
 	// Spring Boot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version:"${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version:"${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version:"${springBootVersion}"   
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version:"${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:"${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version:"${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version:"${springBootVersion}"

	// SolrJ
	implementation group: 'org.apache.solr', name: 'solr-solrj', version: '8.8.2'

	implementation group: 'org.springframework.boot', name: 'spring-boot-properties-migrator', version:"${springBootVersion}"

    // Tensorflow   
	implementation group: 'org.tensorflow', name: 'tensorflow', version: '1.15.0'
	

	// Oracle	
	implementation group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'
	
	// Jasypt
	implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: "${jasyptVersion}"

	// Spring
  	implementation group: 'org.springframework', name: 'spring-test', version: '5.3.7'

 	// Jackson
   	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.12.3'
   	  	
  	// H2
    implementation group: 'com.h2database', name: 'h2', version:'1.4.200'
    
    // MariaDB
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'         
    
    // JSON
    implementation group: 'org.json', name: 'json', version:'20210307'
      
    // CoreNLP
    implementation group: 'edu.stanford.nlp', name: 'stanford-corenlp', version:'4.2.2'
    
    //ASM
    implementation group: 'asm', name: 'asm', version:'3.3.1'
    
    // OpenNLP
    implementation group: 'org.apache.opennlp', name: 'opennlp-tools', version:'1.9.3'
    
    // Apache Commons
    implementation group: 'commons-io', name: 'commons-io', version:'2.8.0'
    implementation group: 'commons-lang', name: 'commons-lang', version:'2.6'
  
    // EhCache
    implementation group: 'net.sf.ehcache', name: 'ehcache', version:'2.10.9.2'
    
    // Tika
    implementation group: 'org.apache.tika', name: 'tika-core', version:'1.26'
    implementation group: 'org.apache.tika', name: 'tika-parsers', version:'1.26'
    implementation group: 'com.levigo.jbig2', name: 'levigo-jbig2-imageio', version:'2.0'
    implementation group: 'com.github.jai-imageio', name: 'jai-imageio-core', version:'1.4.0'
    implementation group: 'com.github.jai-imageio', name: 'jai-imageio-jpeg2000', version:'1.4.0'

    //ActiveMQ using KahaDB
    implementation group: 'org.apache.activemq', name: 'activemq-kahadb-store', version: '5.16.2'
	
	// Swagger 2
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"	
	
	// WebJars
	implementation 'org.webjars.bower:jquery:3.6.0'
	implementation 'org.webjars.bower:jquery.ui:1.12.1'
	implementation 'org.webjars:bootstrap:3.3.7-1'
	implementation 'org.webjars.bower:bootstrap:4.6.0'
	implementation 'org.webjars.bower:moment:2.29.1'
	implementation 'org.webjars.npm:angular:1.8.2'
	implementation 'org.webjars.npm:angular-resource:1.8.2'
	implementation 'org.webjars.npm:angular-animate:1.8.2'
	implementation 'org.webjars.npm:angular-sanitize:1.8.2'	
	implementation 'org.webjars.npm:angular-cookies:1.8.2'
	implementation 'org.webjars.bower:tinymce:5.7.0'
	implementation 'org.webjars.bower:angular-ui-router:1.0.28'
	implementation 'org.webjars.bower:angular-translate:2.18.3'
	implementation 'org.webjars.bower:angular-bootstrap:2.5.0'
	implementation 'org.webjars.bower:angular-moment:1.2.0'
	implementation 'org.webjars.bower:angular-ui-ace:0.2.3'
	implementation 'org.webjars.bower:font-awesome:4.7.0'
	implementation 'org.webjars.bower:ng-file-upload:12.2.13'
	implementation 'org.webjars.bower:angular-ui-notification:0.3.6'
	implementation 'org.webjars.bower:angular-ui-tinymce:0.0.19'
	implementation 'org.webjars.bower:angular-ui-sortable:0.19.0'
	implementation 'org.webjars.bower:angular-ui-select:0.19.8'
	implementation 'org.webjars.bower:ngInfiniteScroll:1.3.4'
	implementation 'org.webjars.bower:nvd3:1.8.6'
    implementation 'org.webjars:d3js:6.6.0'
	implementation 'org.webjars:angular-nvd3:1.0.5'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

jacoco {
    toolVersion = "0.8.6"
}

test {
	useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    
 	jacocoTestReport {
    	reports {
        	xml.enabled true
        	html.enabled false
    	}
	}
   
	check.dependsOn jacocoTestReport   

}